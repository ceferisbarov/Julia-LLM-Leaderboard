[code_generation]
criteria = ["parsed", "executed", "passed_unit_tests", "executed_examples"]
name = "find_median"
contributor = "ceferisbarov"
examples = ["find_median(arr)", "find_median([1,2,3,4,4])"]
imports = ["Test", "Statistics"]
prompt = "Write a function `find`. It computes median over arbitrary array. Provide an example"
reference_solution = "function find_median(v::AbstractVector)\n    isempty(v) && throw(ArgumentError(\"median of an empty array is undefined.\"))\n    eltype(v)>:Missing && any(ismissing, v) && return missing\n    any(x -> x isa Number && isnan(x), v) && return convert(eltype(v), NaN)\n    inds = axes(v, 1)\n    n = length(inds)\n    mid = div(first(inds)+last(inds),2)\n    if isodd(n)\n        return middle(partialsort!(v,mid))\n    else\n        m = partialsort!(v, mid:mid+1)\n        return middle(m[1], m[2])\n    end\nend\n"
unit_tests = ["@test find_median([1.]) === 1.", "@test find_median([1.,3]) === 2.", "@test find_median([1.,3,2]) === 2.", "@test find_median([1,3,2]) === 2.0", "@test find_median([1,3,2,4]) === 2.5", "@test find_median([0.0,Inf]) == Inf", "@test find_median([0.0,-Inf]) == -Inf", "@test find_median([0.,Inf,-Inf]) == 0.0", "@test find_median([1.,-1.,Inf,-Inf]) == 0.0", "@test isnan(find_median([-Inf,Inf]))"]
examples_setup = "arr = [2,4,6,8]"
version = "1.0"
