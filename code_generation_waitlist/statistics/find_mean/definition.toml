[code_generation]
criteria = ["parsed", "executed", "passed_unit_tests", "executed_examples"]
name = "find_mean"
contributor = "ceferisbarov"
examples = ["find_mean(arr, weights)", "find_mean([1,2,3,4,4], [1,1,1,1,1])", "find_mean(1:3, [1, 1, 1])", "find_mean(1:3:9, [1, 1, 1])"]
imports = ["Test"]
prompt = "Write a function `find_mean`. It computes the weighted mean of array `A` with weight vector `w`. Provide an example"
reference_solution = "function find_mean(data::AbstractVector, weights::AbstractVector)\n    @assert length(data) == length(weights) \"Data and weights must have the same length\"\n    \n    total_weight = sum(weights)\n    @assert total_weight != 0 \"Total weight cannot be zero\"\n    \n    sum_product = sum(data .* weights)\n    \n    return sum_product / total_weight\nend\n"
unit_tests = ["@test find_mean([1:3;], [1.0, 1.0, 0.5]) ≈ 1.8", "@test find_mean(1:3, [1.0, 1.0, 0.5]) ≈ 1.8", "@test find_mean(1:3, [1, 1, 1]) == 2", "@test find_mean(1:3, [0, 0, 1]) == 3", "@test find_mean(1:3:7, [0, 0, 1]) == 7"]
examples_setup = "arr = [2,4,6,8]; weights = [4,3,2,1]"
version = "1.0"
